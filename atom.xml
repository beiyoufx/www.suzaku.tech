<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>北有风雪的个人主页</title>
  
  <subtitle>靠谱程序猿养成记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.suzaku.tech/"/>
  <updated>2020-08-20T09:32:42.218Z</updated>
  <id>https://www.suzaku.tech/</id>
  
  <author>
    <name>Teng Yongjie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 设置密钥登录</title>
    <link href="https://www.suzaku.tech/2020/08/20/linux-ssh-login/"/>
    <id>https://www.suzaku.tech/2020/08/20/linux-ssh-login/</id>
    <published>2020-08-20T08:10:59.000Z</published>
    <updated>2020-08-20T09:32:42.218Z</updated>
    
    <content type="html"><![CDATA[<p>多数时候使用密码来登录远程linux服务器是不安全的，许多ssh客户端都会保存密码，有泄密的风险；而如果每次都手动输入密码，就显得不太方便，那么这个时候可以选择使用ssh密钥登录，就是把ssh公钥放到服务器，私钥放到客户端，客户端配置成密钥登录，会更方便也更安全。</p><a id="more"></a><h1 id="生成一个rsa密钥对"><a href="#生成一个rsa密钥对" class="headerlink" title="生成一个rsa密钥对"></a>生成一个rsa密钥对</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@suzaku-20200812 ~]# ssh-keygen -t rsa</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">7e:7a:29:07:e5:4f:05:b5:8f:98:66:b3:1b:77:71:1b root@suzaku-20200812</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|             ..  |</span><br><span class="line">|       .    .  . |</span><br><span class="line">|            .  . |</span><br><span class="line">|        . .  o.o |</span><br><span class="line">|        So  *..Eo|</span><br><span class="line">|       .* .o.o  =|</span><br><span class="line">|        ...+o ...|</span><br><span class="line">|        .o+ .+ . |</span><br><span class="line">|        .+  .*   |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><p>默认生成的密钥文件在用户主目录下面的<code>.ssh</code>目录下，一般情况下不建议直接使用root用户进行登录。</p><h1 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h1><p>将上面生成的<code>id_rsa.pub</code>公钥内容追加到<code>.ssh</code>目录下<code>authorized_keys</code>文件末尾。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh</span><br><span class="line">touch authorized_keys  -- 如果文件已经存在，则不需要新建</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys   -- 将id_rsa.pub的内容追加到authorized_keys</span><br></pre></td></tr></table></figure><p>修改<code>.ssh</code>目录的权限为700，<code>authorized_keys</code>文件的权限为600，否则登录会提示<code>server refuse you key</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">chmod 700 .ssh</span><br><span class="line">chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="普通用户配置"><a href="#普通用户配置" class="headerlink" title="普通用户配置"></a>普通用户配置</h2><p>如果你的用户不是root，而是一个普通用户，比如<code>suzaku</code>，那么需要更改<code>.ssh</code>的所有者为<code>suzaku</code>，否则仍然会登录不了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R suzaku:suzaku .ssh</span><br></pre></td></tr></table></figure><h2 id="配置授权文件"><a href="#配置授权文件" class="headerlink" title="配置授权文件"></a>配置授权文件</h2><p>默认授权文件会读取用户主目录下的<code>.ssh/authorized_keys</code>文件，可以再检查一下配置是否正确。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>打开密钥登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> but this is overridden so installations will only check .ssh/authorized_keys</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h1 id="使用密钥进行登录"><a href="#使用密钥进行登录" class="headerlink" title="使用密钥进行登录"></a>使用密钥进行登录</h1><p>将上面生成的私钥<code>id_rsa</code>文件拷贝到本地，或者拷贝文件内容重新保存也行。</p><h2 id="MAC下使用SecureCRT进行登录"><a href="#MAC下使用SecureCRT进行登录" class="headerlink" title="MAC下使用SecureCRT进行登录"></a>MAC下使用SecureCRT进行登录</h2><ul><li>打开软件，选择配置-&gt;Connection-&gt;Protocol，使用SSH2登录</li><li>选择Connection-&gt;Authentication，选择PublicKey方式</li><li>点击右侧Properties进行PublicKey配置</li><li>选择<code>Use session public key setting</code></li><li>配置<code>Use identity or certificate file</code>，选择下载的<code>id_rsa</code>文件</li><li>保存即可登录</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多数时候使用密码来登录远程linux服务器是不安全的，许多ssh客户端都会保存密码，有泄密的风险；而如果每次都手动输入密码，就显得不太方便，那么这个时候可以选择使用ssh密钥登录，就是把ssh公钥放到服务器，私钥放到客户端，客户端配置成密钥登录，会更方便也更安全。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.suzaku.tech/categories/Linux/"/>
    
    
      <category term="服务器" scheme="https://www.suzaku.tech/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="SSH" scheme="https://www.suzaku.tech/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博文</title>
    <link href="https://www.suzaku.tech/2020/07/03/hexo/"/>
    <id>https://www.suzaku.tech/2020/07/03/hexo/</id>
    <published>2020-07-03T09:41:49.000Z</published>
    <updated>2020-08-20T09:32:33.002Z</updated>
    
    <content type="html"><![CDATA[<p>世界那么大，总有些事情做不完</p><a id="more"></a><p>靠谱程序员养成记</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;世界那么大，总有些事情做不完&lt;/p&gt;
    
    </summary>
    
    
      <category term="琐事" scheme="https://www.suzaku.tech/categories/%E7%90%90%E4%BA%8B/"/>
    
    
      <category term="随笔" scheme="https://www.suzaku.tech/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装Nginx服务器</title>
    <link href="https://www.suzaku.tech/2016/05/11/linux-centos-nginx/"/>
    <id>https://www.suzaku.tech/2016/05/11/linux-centos-nginx/</id>
    <published>2016-05-11T05:58:32.000Z</published>
    <updated>2020-08-20T09:33:12.689Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Nginx在linux下的安装与设置。<br>Nginx是一个高性能的web反向代理服务器，详情参考<a href="http://nginx.org/" target="_blank" rel="noopener">nginx官网</a>，<a href="http://www.nginx.cn/doc" target="_blank" rel="noopener">中文文档</a>。</p><a id="more"></a><h1 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h1><p>选首先安装这几个软件：GCC，PCRE（Perl Compatible Regular Expression），zlib，OpenSSL。<br>Nginx是C写的，需要用GCC编译；Nginx的Rewrite和HTTP模块会用到PCRE；Nginx中的Gzip用到zlib；<br>用命令<code># gcc</code>，查看gcc是否安装；如果出现<code>gcc: no input files</code>信息，说明已经安装好了。<br>否则，就需要用命令<code># yum install gcc</code>，进行安装了！一路可能需要多次输入y，进行确认。<br>安装好后，可以再用命令<code>#gcc</code>测试，或者用命令<code># gcc -v</code>查看其版本号。<br>同样方法，用如下命令安装PCRE，zlib，OpenSSL（其中devel，是develop开发包的意思）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y pcre pcre-devel  </span><br><span class="line"># yum install -y zlib zlib-devel  </span><br><span class="line"># yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><h1 id="2、下载并安装"><a href="#2、下载并安装" class="headerlink" title="2、下载并安装"></a>2、下载并安装</h1><p>创建目录（nginx-src）并进去；然后，从<a href="http://nginx.org/" target="_blank" rel="noopener">nginx官网</a>下载，解压，配置，编译，安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># mkdir nginx-src &amp;&amp; cd nginx-src  </span><br><span class="line"># wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.7.3.tar.gz  </span><br><span class="line"># tar xzf nginx-1.7.3.tar.gz   </span><br><span class="line"># cd nginx-1.7.3  </span><br><span class="line"># .&#x2F;configure  </span><br><span class="line"># make  </span><br><span class="line"># make install  </span><br><span class="line"># whereis nginx  </span><br><span class="line">nginx: &#x2F;usr&#x2F;local&#x2F;nginx</span><br></pre></td></tr></table></figure><p>默认的安装路径为：<code>/usr/local/nginx</code>；跳转到其目录下sbin路径下，便可以启动或停止它了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;nginx -h</span><br><span class="line"></span><br><span class="line">nginx version: nginx&#x2F;1.7.3  </span><br><span class="line">Usage: nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]  </span><br><span class="line">Options:  </span><br><span class="line">  -?,-h         : this help  </span><br><span class="line">  -v            : show version and exit  </span><br><span class="line">  -V            : show version and configure options then exit  </span><br><span class="line">  -t            : test configuration and exit  </span><br><span class="line">  -q            : suppress non-error messages during configuration testing  </span><br><span class="line">  -s signal     : send signal to a master process: stop, quit, reopen, reload  </span><br><span class="line">  -p prefix     : set prefix path (default: &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;)  </span><br><span class="line">  -c filename   : set configuration file (default: conf&#x2F;nginx.conf)  </span><br><span class="line">  -g directives : set global directives out of configuration file</span><br></pre></td></tr></table></figure><p>启动：<code>nginx</code><br>停止：<code>nginx -s stop</code></p><h1 id="3、添加到系统服务"><a href="#3、添加到系统服务" class="headerlink" title="3、添加到系统服务"></a>3、添加到系统服务</h1><p>使用命令<code># vi /etc/init.d/nginx</code>，打开编辑器，输入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh  </span><br><span class="line"># chkconfig: 2345 85 15  </span><br><span class="line"># Startup script for the nginx Web Server  </span><br><span class="line"># description: nginx is a World Wide Web server.   </span><br><span class="line"># It is used to serve HTML files and CGI.  </span><br><span class="line"># processname: nginx  </span><br><span class="line"># pidfile: &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid  </span><br><span class="line"># config: &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf  </span><br><span class="line">  </span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin  </span><br><span class="line">DESC&#x3D;&quot;nginx deamon&quot;  </span><br><span class="line">NAME&#x3D;nginx  </span><br><span class="line">DAEMON&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;$NAME  </span><br><span class="line">SCRIPTNAME&#x3D;&#x2F;etc&#x2F;init.d&#x2F;$NAME  </span><br><span class="line">  </span><br><span class="line">test -x $DAEMON || exit 0  </span><br><span class="line">  </span><br><span class="line">d_start()&#123;  </span><br><span class="line">  $DAEMON || echo -n &quot;already running&quot;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">d_stop()&#123;  </span><br><span class="line">  $DAEMON -s quit || echo -n &quot;not running&quot;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">d_reload()&#123;  </span><br><span class="line">  $DAEMON -s reload || echo -n &quot;can not reload&quot;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">case &quot;$1&quot; in  </span><br><span class="line">start)  </span><br><span class="line">  echo -n &quot;Starting $DESC: $NAME&quot;  </span><br><span class="line">  d_start  </span><br><span class="line">  echo &quot;.&quot;  </span><br><span class="line">;;  </span><br><span class="line">stop)  </span><br><span class="line">  echo -n &quot;Stopping $DESC: $NAME&quot;  </span><br><span class="line">  d_stop  </span><br><span class="line">  echo &quot;.&quot;  </span><br><span class="line">;;  </span><br><span class="line">reload)  </span><br><span class="line">  echo -n &quot;Reloading $DESC conf...&quot;  </span><br><span class="line">  d_reload  </span><br><span class="line">  echo &quot;reload .&quot;  </span><br><span class="line">;;  </span><br><span class="line">restart)  </span><br><span class="line">  echo -n &quot;Restarting $DESC: $NAME&quot;  </span><br><span class="line">  d_stop  </span><br><span class="line">  sleep 2  </span><br><span class="line">  d_start  </span><br><span class="line">  echo &quot;.&quot;  </span><br><span class="line">;;  </span><br><span class="line">*)  </span><br><span class="line">  echo &quot;Usage: $ScRIPTNAME &#123;start|stop|reload|restart&#125;&quot; &gt;&amp;2  </span><br><span class="line">  exit 3  </span><br><span class="line">;;  </span><br><span class="line">esac  </span><br><span class="line">  </span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>保存退出后，再使用下面的命令，使其可执行；然后，添加配置并查看。<br>可用chkconfig修改其值，也可用ntsysv工具改变是否自启动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># chmod +x &#x2F;etc&#x2F;init.d&#x2F;nginx  </span><br><span class="line"># chkconfig --add nginx  </span><br><span class="line"># chkconfig nginx on&#x2F;off  </span><br><span class="line"># chkconfig --list nginx  </span><br><span class="line">nginx 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Nginx在linux下的安装与设置。&lt;br&gt;Nginx是一个高性能的web反向代理服务器，详情参考&lt;a href=&quot;http://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nginx官网&lt;/a&gt;，&lt;a href=&quot;http://www.nginx.cn/doc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中文文档&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.suzaku.tech/categories/Linux/"/>
    
    
      <category term="服务器" scheme="https://www.suzaku.tech/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Nginx" scheme="https://www.suzaku.tech/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装MySQL数据库</title>
    <link href="https://www.suzaku.tech/2016/05/11/linux-centos-mysql/"/>
    <id>https://www.suzaku.tech/2016/05/11/linux-centos-mysql/</id>
    <published>2016-05-11T05:47:40.000Z</published>
    <updated>2020-08-20T09:33:26.919Z</updated>
    
    <content type="html"><![CDATA[<p>在linux中安装数据库首选MySQL，Mysql数据库的第一个版本就是发行在Linux系统上，其他选择还可以有postgreSQL，oracle等。<br>在Linux上安装mysql数据库，我们可以去其官网上下载mysql数据库的rpm包，<a href="http://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/5.6.html#downloads</a>，大家可以根据自己的操作系统去下载对应的数据库文件。<br>这里我是通过yum来进行mysql数据库的安装的，通过这种方式进行安装，可以将跟mysql相关的一些服务、jar包都给我们安装好，比较方便。</p><a id="more"></a><h1 id="一、查看系统中是否已经自带mysql数据库"><a href="#一、查看系统中是否已经自带mysql数据库" class="headerlink" title="一、查看系统中是否已经自带mysql数据库"></a>一、查看系统中是否已经自带mysql数据库</h1><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzMTM1NTU4?x-oss-process=image/format,png" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wuxian ~]# rpm -qa | grep mysql　　&#x2F;&#x2F; 这个命令就会查看该操作系统上是否已经安装了mysql数据库</span><br></pre></td></tr></table></figure><p>通过这个命令查看该系统中是否已经安装了mysql，可以看到我的系统比较干净，没有安装任何版本的mysql,如果你系统有安装，那可以选择进行卸载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@wuxian ~]# rpm -e mysql　　&#x2F;&#x2F; 普通删除模式</span><br><span class="line">[root@wuxian ~]# rpm -e --nodeps mysql　　&#x2F;&#x2F; 强力删除模式，如果</span><br></pre></td></tr></table></figure><p>使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</p><h1 id="二、使用yum命令进行mysql的安装"><a href="#二、使用yum命令进行mysql的安装" class="headerlink" title="二、使用yum命令进行mysql的安装"></a>二、使用yum命令进行mysql的安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wuxian ~]# yum list | grep mysql</span><br></pre></td></tr></table></figure><p>我们通过命令可以查看yum上提供下载的mysql的版本信息<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzNTM4MjAw?x-oss-process=image/format,png" alt="这里写图片描述"><br>然后通过下面的命令进行数据库的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wuxian ~]# yum install -y mysql-server mysql mysql-deve</span><br></pre></td></tr></table></figure><p>等待一段时间后，输出：<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzNjAzNTQ0?x-oss-process=image/format,png" alt="这里写图片描述"><br>表示安装已经成功了！通过以下命令可以查看已安装数据库的版本信息<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzNjIwOTY2?x-oss-process=image/format,png" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wuxian ~]# rpm -qi mysql-server</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzNjQ3Njk4?x-oss-process=image/format,png" alt="这里写图片描述"></p><p>如果提示没有yum mysql-server 没有可用的包，解决方案参考：<a href="http://blog.csdn.net/markboo/article/details/50482362" target="_blank" rel="noopener">没有可用包的问题</a></p><h1 id="三、mysql数据库的初始化及相关配置"><a href="#三、mysql数据库的初始化及相关配置" class="headerlink" title="三、mysql数据库的初始化及相关配置"></a>三、mysql数据库的初始化及相关配置</h1><p>我们在安装完mysql数据库以后，会发现会多出一个mysqld的服务，这个就是咱们的数据库服务，我们通过输入<code>service mysqld start</code>命令就可以启动我们的mysql服务。<br>注意：如果我们是第一次启动mysql服务，mysql服务器首先会进行初始化的配置，如：<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzNzM0NDQ5?x-oss-process=image/format,png" alt="这里写图片描述"><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzODA5MDU5?x-oss-process=image/format,png" alt="这里写图片描述"><br>这时我们会看到第一次启动mysql服务器以后会提示非常多的信息，目的就是对mysql数据库进行初始化操作，当我们再次重新启动mysql服务时，就不会提示这么多信息了<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzODIyNTEz?x-oss-process=image/format,png" alt="这里写图片描述"><br>我们在使用mysql数据库时，都得首先启动mysqld服务，我们可以通过<code>chkconfig --list | grep mysqld</code>命令来查看mysql服务是不是开机自动启动，如果发现mysqld服务并没有开机自动启动，我们当然可以通过<code>chkconfig mysqld on</code>命令来将其设置成开机启动，这样就不用每次都去手动启动了<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzODM2NzMy?x-oss-process=image/format,png" alt="这里写图片描述"><br>mysql数据库安装完以后只会有一个root管理员账号，但是此时的root账号还并没有为其设置密码，在第一次启动mysql服务时，会进行数据库的一些初始化工作，在输出的一大串信息中，我们看到有这样一行信息 ：<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzODU3OTA0?x-oss-process=image/format,png" alt="这里写图片描述"><br>我们就根据这个命令为root用户设置密码为root<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MDE2OTY5?x-oss-process=image/format,png" alt="这里写图片描述"><br>此时我们就可以通过<code>mysql -u root -p</code>命令来登录我们的mysql数据库了<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTMzOTEwNjg2?x-oss-process=image/format,png" alt="这里写图片描述"></p><h1 id="四、mysql的主要配置信息-不重要"><a href="#四、mysql的主要配置信息-不重要" class="headerlink" title="四、mysql的主要配置信息(不重要)"></a>四、mysql的主要配置信息(不重要)</h1><ol><li><code>/etc/my.cnf</code> 这是mysql的主配置文件<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MTAyNzgw?x-oss-process=image/format,png" alt="这里写图片描述"></li><li><code>/var/lib/mysql</code>   mysql数据库的数据库文件存放位置<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MTExODEy?x-oss-process=image/format,png" alt="这里写图片描述"><br>mysql,test是mysql数据库自带的两个数据库<br>现在我们进入mysql命令行来创建一个数据库试试<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MTI4NTYy?x-oss-process=image/format,png" alt="这里写图片描述"></li><li><code>/var/log mysql</code>数据库的日志输出存放位置<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MTM3MzE1?x-oss-process=image/format,png" alt="这里写图片描述"><br>其中mysqld.log 这个文件就是存放我们跟mysql数据库进行操作而产生的一些日志信息，通过查看该日志文件，我们可以从中获得很多信息<br>我们都知道mysql数据库绑定的端口号是 3306 ，所以我们可以通过 netstat -anp 命令来查看一下，Linux系统是否在监听 3306 这个端口号：<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTExMTM0MTU1NDU2?x-oss-process=image/format,png" alt="这里写图片描述"></li></ol><h1 id="五、MySQL更改编码方式"><a href="#五、MySQL更改编码方式" class="headerlink" title="五、MySQL更改编码方式"></a>五、MySQL更改编码方式</h1><p>进入mysql的命令：<code>mysql -u root -p</code></p><ul><li><p>查看编码格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;character%&#39;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client | latin1 |</span><br><span class="line">| character_set_connection | latin1 |</span><br><span class="line">| character_set_database | latin1 |</span><br><span class="line">| character_set_filesystem | binary |</span><br><span class="line">| character_set_results | latin1 |</span><br><span class="line">| character_set_server | latin1 |</span><br><span class="line">| character_set_system | utf8 |</span><br><span class="line">| character_sets_dir | &#x2F;usr&#x2F;share&#x2F;mysql&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------+</span><br></pre></td></tr></table></figure></li><li><p>复制<code>my-large.cnf</code>文件到<code>/etc/my.cnf</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;share&#x2F;doc&#x2F;mysql-server-4.1.12&#x2F;my-large.cnf  &#x2F;etc&#x2F;my.cnf</span><br></pre></td></tr></table></figure><ul><li>打开my.cnf修改编码<br><code>vi /etc/my.cnf</code></li><li>在[mysqld]下添加<br><code>default-character-set=utf8</code></li><li>在[client]下添加<br><code>default-character-set=utf8</code></li><li>对于高版本Mysql，需要使用如下语句变更编码方式<br><code>character-set-server=utf8</code></li><li>重启MySQL服务<br>service mysqld restert<br><code>高版本CentOS使用systemctl start mysqld.service进行启动</code></li><li>登录mysql看看修改成功否</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> show variables like &#39;character%&#39;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | &#x2F;usr&#x2F;share&#x2F;mysql&#x2F;charsets&#x2F; |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>如果显示以上信息表示修改成功了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在linux中安装数据库首选MySQL，Mysql数据库的第一个版本就是发行在Linux系统上，其他选择还可以有postgreSQL，oracle等。&lt;br&gt;在Linux上安装mysql数据库，我们可以去其官网上下载mysql数据库的rpm包，&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/5.6.html#downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://dev.mysql.com/downloads/mysql/5.6.html#downloads&lt;/a&gt;，大家可以根据自己的操作系统去下载对应的数据库文件。&lt;br&gt;这里我是通过yum来进行mysql数据库的安装的，通过这种方式进行安装，可以将跟mysql相关的一些服务、jar包都给我们安装好，比较方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.suzaku.tech/categories/Linux/"/>
    
    
      <category term="数据库" scheme="https://www.suzaku.tech/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://www.suzaku.tech/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装java环境</title>
    <link href="https://www.suzaku.tech/2016/05/06/linux-centos-java/"/>
    <id>https://www.suzaku.tech/2016/05/06/linux-centos-java/</id>
    <published>2016-05-06T05:50:45.000Z</published>
    <updated>2020-08-24T09:06:40.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>一般情况下，我们都要将linux自带的OPENJDK卸载掉，然后安装SUN的JDK。</p><h2 id="首先，卸载自带的java"><a href="#首先，卸载自带的java" class="headerlink" title="首先，卸载自带的java"></a>首先，卸载自带的java</h2><p>查看Linux自带的JDK是否已安装。<br>输入如下命令，查看已经安装的JAVA版本信息。 </p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>输入如下命令，查看JDK的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep java</span><br></pre></td></tr></table></figure><p>如下图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTA2MTMzNzM1ODU1?x-oss-process=image/format,png" alt="查看jdk版本"></p><p>卸载已经安装的JAVA，如下图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTA2MTMzODU2NDUw?x-oss-process=image/format,png" alt="卸载java"></p><p>卸载完成，如下图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTA2MTM0MDAwNjcy?x-oss-process=image/format,png" alt="卸载完成"></p><p>卸载另外一个，如下图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTA2MTM0MDQ5OTA2?x-oss-process=image/format,png" alt="卸载另一个"></p><p>卸载完成，如下图所示。<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYwNTA2MTM0MTI0Mjk3?x-oss-process=image/format,png" alt="卸载完成"></p><h2 id="第二步，安装Oracle-JDK。"><a href="#第二步，安装Oracle-JDK。" class="headerlink" title="第二步，安装Oracle JDK。"></a>第二步，安装Oracle JDK。</h2><p>官网：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p><p>在/usr下建立一个java目录，以备将java程序安装在此目录下，输入如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;share&#x2F;java</span><br></pre></td></tr></table></figure><p>将文件复制到/usr/share/java目录下，输入如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp *.gz &#x2F;usr&#x2F;share&#x2F;java</span><br></pre></td></tr></table></figure><p>查看/usr/share/java目录，输入如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;share&#x2F;java</span><br></pre></td></tr></table></figure><p>解压文件，输入如下命令：<br>Linux代码  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf jdk-8u261-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>解压后，在/usr/share/java目录下就会生成一个新的目录jdk1.8.0_261，该目录下存放的是解压后的文件。</p><p>或者，如果你下载的文件是rpm 格式的话，在上面用tar命令处，替换为下列命令来安装，其他步骤不变。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh jdk-7u79-linux-x64.rpm</span><br></pre></td></tr></table></figure><p>最后进行环境变量的设置。<br>输入如下命令，进入配置文件，或者通过其他方式打开配置文件。高版本CentOS建议在用户目录进行配置，文件是：<code>.bashrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>进入配置文件，如下图所示，将下面的第1行删除，换为下面2-4行配置信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</span><br><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.7.0_79</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br></pre></td></tr></table></figure><p>让环境变量生效。<br>执行配置文件，令其立刻生效，输入如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>验证是否安装成功，输入如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java -version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;一般情况下，我们都要将linux自带的OPENJDK卸载掉，然后安装SUN的JDK。&lt;/p&gt;
&lt;h2 id=&quot;首先，卸载自带的java&quot;&gt;&lt;a href=&quot;#首先，卸载自带的java&quot; class=&quot;headerlink&quot; title=&quot;首先，卸载自带的java&quot;&gt;&lt;/a&gt;首先，卸载自带的java&lt;/h2&gt;&lt;p&gt;查看Linux自带的JDK是否已安装。&lt;br&gt;输入如下命令，查看已经安装的JAVA版本信息。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.suzaku.tech/categories/Linux/"/>
    
    
      <category term="Java环境" scheme="https://www.suzaku.tech/tags/Java%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
</feed>
